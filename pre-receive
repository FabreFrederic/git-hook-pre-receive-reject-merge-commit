#!/bin/bash

#
# pre-receive hook
#
# Rejects a push if it contains merge commits from remote tracking branch 
# into the same local branch are not allowed.
# This kind of merge commits are created when the user is pulling 
# the remote repository with merge default option. To update a git local repository,
# we have to use 'pull --rebase' or 'pull --preserve'
# 
# The script compares the commits messages with a pattern

###########################################################################
# Parameters
###########################################################################

branchName="refs/heads/develop"
pattern="Merge remote-tracking branch 'origin/develop' into develop"

# Update the $revisions var with the revisions to process
# param 1 : old revision hash
# param 2 : new revision hash
getRevisionsToProcess() {
    old=$1
    new=$2

    # --- Interpret
    # 0000->1234 (create)
    # 1234->2345 (update)
    # 2345->0000 (delete)
    if expr "$old" : '0*$' > /dev/null
    then
      # New branch"
      revisions=$new
    else
        if expr "$new" : '0*$' > /dev/null
        then
            # Deleted branch
            revisions=""
        else
            # Branch update, show revisions not part of $old
            revisions=$old..$new
        fi
    fi  
}

###########################################################################
# Main body of script
###########################################################################
echo
echo "========================================================"
echo "pre-receive git hook"
echo "========================================================"
# Branches loop
# because it is possible to push more than one branch at a time with the "git push --all" command
while read oldrev newrev refname
do
    if [ "$refname" == "$branchName" ]; then
        echo
        echo "--------------------------------------------------------"

        getRevisionsToProcess "$oldrev" "$newrev"

        # Commits (revisions) loop in chronological order
        for sha1Commit in $(git rev-parse | \
            git rev-list --merges --stdin $revisions)
	    do
        	# The commit message is the text after the first blank line
        	commitMessage=$(git cat-file commit $sha1Commit | sed '1,/^$/d')

		    if [[ $commitMessage == *"$pattern"* ]]
		    then	
			    echo "Merge commit rejected : $sha1Commit"
			    echo
			    echo "Merge commits from remote tracking branch into the same local branch are not allowed !"
			    echo "To update your local repository, you have to use 'pull --rebase' or 'pull --preserve'"
			    echo "'git help pull' for more information"
			    echo "Reset your local merge commit and pull again"
			    echo
			    echo
			    exit 1;
		    fi
        done
    fi
    echo "Your git push has been accepted"
    echo
done
